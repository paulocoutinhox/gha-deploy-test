name: Demo - iOS

on: [push]

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - { name: "macOS Latest Clang", os: "macos-latest", target: "ios" }
        python-version: [3.7]

    steps:
      - uses: actions/checkout@v2
      
      - name: Build
        run: cat build/${{ matrix.config.target }}/my-file.txt

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [build]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Create artifact
        run: cd build/ios/ && tar -cvf ios.tgz my-file.txt
      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/ios/ios.tgz
          asset_name: ios.tgz
          asset_content_type: application/tar+gzip
